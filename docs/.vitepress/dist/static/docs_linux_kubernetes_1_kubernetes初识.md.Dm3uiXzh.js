import{_ as e,c as s,o as t,a3 as a}from"./chunks/framework.CrrYOWPS.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{"date":"2024-04-10T00:00:00.000Z"},"headers":[],"relativePath":"docs/linux/kubernetes/1_kubernetes初识.md","filePath":"docs/linux/kubernetes/1_kubernetes初识.md","lastUpdated":null}'),r={name:"docs/linux/kubernetes/1_kubernetes初识.md"},u=a('<h3 id="kubernetes初识" tabindex="-1">Kubernetes初识 <a class="header-anchor" href="#kubernetes初识" aria-label="Permalink to &quot;Kubernetes初识&quot;">​</a></h3><p>Kubernetes 为你提供了一个可弹性运行分布式系统的框架。 Kubernetes 会满足你的扩展要求、故障转移、部署模式等。 例如，Kubernetes 可以轻松管理系统的 Canary 部署。</p><h3 id="kubernetes具有以下特性" tabindex="-1">kubernetes具有以下特性 <a class="header-anchor" href="#kubernetes具有以下特性" aria-label="Permalink to &quot;kubernetes具有以下特性&quot;">​</a></h3><details class="details custom-block"><summary>服务发现和负载均衡</summary><p>Kubernetes 可以使用 DNS 名称或自己的 IP 地址公开容器，如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p></details><details class="details custom-block"><summary>存储编排</summary><p>Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p></details><details class="details custom-block"><summary>自动部署和回滚</summary><p>你可以使用 Kubernetes 描述已部署容器的所需状态，它可以以受控的速率将实际状态 更改为期望状态。例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p></details><details class="details custom-block"><summary>自动完成装箱计算</summary><p>Kubernetes 允许你指定每个容器所需 CPU 和内存（RAM）。 当容器指定了资源请求时，Kubernetes 可以做出更好的决策来管理容器的资源。</p></details><details class="details custom-block"><summary>自我修复</summary><p>Kubernetes 重新启动失败的容器、替换容器、杀死不响应用户定义的 运行状况检查的容器，并且在准备好服务之前不将其通告给客户端。</p></details><details class="details custom-block"><summary>密钥与配置管理</summary><p>Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。</p></details><h3 id="kubernetes架构" tabindex="-1">kubernetes架构 <a class="header-anchor" href="#kubernetes架构" aria-label="Permalink to &quot;kubernetes架构&quot;">​</a></h3>',10),n=[u];function l(o,c,d,i,b,m){return t(),s("div",null,n)}const p=e(r,[["render",l]]);export{k as __pageData,p as default};
