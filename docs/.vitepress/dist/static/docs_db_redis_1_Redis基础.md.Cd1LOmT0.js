import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.BSgsMaz1.js";const y=JSON.parse('{"title":"1_Redis介绍与使用","description":"","frontmatter":{"title":"1_Redis介绍与使用","icon":"Redis","date":"2024-04-09T00:00:00.000Z"},"headers":[],"relativePath":"docs/db/redis/1_Redis基础.md","filePath":"docs/db/redis/1_Redis基础.md","lastUpdated":1714888091000}'),l={name:"docs/db/redis/1_Redis基础.md"},e=n(`<h1 id="_1-redis基础" tabindex="-1">1_Redis基础 <a class="header-anchor" href="#_1-redis基础" aria-label="Permalink to &quot;1_Redis基础&quot;">​</a></h1><h3 id="_1、认识nosql" tabindex="-1">1、认识NoSQL <a class="header-anchor" href="#_1、认识nosql" aria-label="Permalink to &quot;1、认识NoSQL&quot;">​</a></h3><ul><li><strong>NoSql</strong>可以是Not Only Sql（不仅仅是SQL），也可以是No Sql（非Sql的）数据库 ，叫为<strong>非关系型数据库</strong>。</li><li>分类 <ul><li>键值存储数据库:Redis、Memcached</li><li>文档型数据库:MongoDB</li><li>图形数据库:Neo4j</li><li>列型数据库:HBase</li></ul></li><li>NoSQL不保证ACID原则</li></ul><h3 id="_2、介绍-redis" tabindex="-1">2、介绍 <a href="https://redis.io" target="_blank" rel="noreferrer">Redis</a> <a class="header-anchor" href="#_2、介绍-redis" aria-label="Permalink to &quot;2、介绍 [Redis](https://redis.io)&quot;">​</a></h3><ul><li>Redis是一个默认端口号<code>6379</code>键值型的<code>NoSql</code>数据库，go语言编写</li><li>基于内存，低延迟，速度快</li><li>键值（key-value）型，value支持多种不同数据结构</li><li>单线程，每个命令具备原子性</li><li>支持数据持久化</li><li>支持主从集群、分片集群</li><li>支持多语言客户端(Java,python等)</li></ul><h3 id="_3、使用场景" tabindex="-1">3、使用场景 <a class="header-anchor" href="#_3、使用场景" aria-label="Permalink to &quot;3、使用场景&quot;">​</a></h3><details class="details custom-block"><summary>缓存</summary><ul><li>Redis 最常见的用途之一是作为高速缓存层，用于存储热点数据，减少对后端数据库的压力。通过设置键的过期时间（TTL），可以自动刷新缓存中的数据。</li></ul></details><details class="details custom-block"><summary>实时排行榜与计数器</summary><ul><li>Redis 提供有序集合（Sorted Set）数据结构，可以轻松实现实时排名系统，如用户积分排行、文章热度排行等。</li><li>利用 <code>INCR</code> 和 <code>DECR</code> 命令，Redis 可以作为高效的计数器服务，用于记录网页点击次数、商品库存数量、用户点赞数等。</li></ul></details><details class="details custom-block"><summary>会话存储（Session 存储）</summary><ul><li>在大型分布式环境中，Redis 可以作为集中式会话存储服务，确保在多台服务器之间共享用户会话状态。</li></ul></details><details class="details custom-block"><summary>分布式锁</summary><ul><li>Redis 支持原生的分布式锁机制，如使用 <code>SETNX</code> 和 <code>EXPIRE</code> 实现乐观锁，用于协调多进程或分布式环境下的并发控制。</li></ul></details><details class="details custom-block"><summary>消息队列</summary><ul><li>Redis 列表（List）数据结构可以模拟队列或堆栈，实现简单的消息队列功能，比如通过 <code>LPUSH</code> 和 <code>BRPOP</code> 实现工作队列,也可以使用Stream。</li></ul></details><details class="details custom-block"><summary>社交网络功能</summary><ul><li>Redis 支持丰富的数据结构，如哈希（Hash）和集合（Sets），因此非常适合存储用户的社交关系，如关注/粉丝、共同好友、赞/踩等社交互动数据。</li></ul></details><details class="details custom-block"><summary>查找表</summary><ul><li>对于一些需要快速查找的数据，如DNS记录、IP黑名单等，Redis可以提供近乎实时的查询能力。</li></ul></details><details class="details custom-block"><summary>实时数据分析与统计</summary><ul><li>Redis可以实时收集并聚合数据，对于实时计算如PV统计、UV统计等场景非常有效。（HyperLogLog）</li></ul></details><details class="details custom-block"><summary>地理空间索引</summary><ul><li>Redis支持地理空间索引功能，可用于附近地点搜索、地理位置分析等应用场景。（GEO）</li></ul><details class="details custom-block"><summary>多级缓存</summary></details></details><h3 id="_4、redis安装" tabindex="-1">4、Redis安装 <a class="header-anchor" href="#_4、redis安装" aria-label="Permalink to &quot;4、Redis安装&quot;">​</a></h3><ul><li><p>Linux环境安装</p><ul><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcl</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-6.2.14.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis-6.2.14</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li></ul></li><li><p>使用Docker安装</p><ul><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#需要一份配置文件放到redis.conf,或者第一次启动之后从容器中拷贝</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 6379:6379</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myredis</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--privileged=true </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/app/redis/redis.conf:/etc/redis/redis.conf</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-v </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/root/app/redis/data:/data</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">redis:6.2.14 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/redis/redis.conf</span></span></code></pre></div></li></ul></li></ul><h3 id="_5、启动" tabindex="-1">5、启动 <a class="header-anchor" href="#_5、启动" aria-label="Permalink to &quot;5、启动&quot;">​</a></h3><h4 id="_5、1默认启动" tabindex="-1">5、1默认启动 <a class="header-anchor" href="#_5、1默认启动" aria-label="Permalink to &quot;5、1默认启动&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#前台启动，会阻塞整个会话窗口，不推荐</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-server</span></span></code></pre></div><h4 id="_5、2指定配置文件启动" tabindex="-1">5、2指定配置文件启动 <a class="header-anchor" href="#_5、2指定配置文件启动" aria-label="Permalink to &quot;5、2指定配置文件启动&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#推荐，指定配置文件，启动前修改配置文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/redis/redis.conf</span></span></code></pre></div><h4 id="_5、3开机自启-linux" tabindex="-1">5、3开机自启（linux） <a class="header-anchor" href="#_5、3开机自启-linux" aria-label="Permalink to &quot;5、3开机自启（linux）&quot;">​</a></h4><p>首先，新建一个系统服务文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/systemd/system/redis.service</span></span></code></pre></div><div class="language-conf vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">conf</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[Unit]</span></span>
<span class="line"><span>Description=redis-server</span></span>
<span class="line"><span>After=network.target</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Service]</span></span>
<span class="line"><span>Type=forking</span></span>
<span class="line"><span>ExecStart=/usr/local/bin/redis-server /usr/local/src/redis-6.2.14/redis.conf</span></span>
<span class="line"><span>PrivateTmp=true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[Install]</span></span>
<span class="line"><span>WantedBy=multi-user.target</span></span></code></pre></div><p>重载系统服务：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> daemon-reload</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 停止</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stop</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重启</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 查看状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span></code></pre></div><p>redis开机自启：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> redis</span></span></code></pre></div><h3 id="_6、配置文件详解" tabindex="-1">6、配置文件详解 <a class="header-anchor" href="#_6、配置文件详解" aria-label="Permalink to &quot;6、配置文件详解&quot;">​</a></h3><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生产环境不要设置为0.0.0.0，指定Redis服务器绑定的IP地址，可以是单个IP或多个IP，留空则接受所有网络接口连接,默认情况bind=127.0.0.1只能接受本机的访问请求,不写的情况下，无限制接受任何ip地址的访问</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bind 0.0.0.0</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果开启了protected-mode，那么在没有设定bind ip且没有设密码的情况下，Redis只允许接受	本机的响应</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protected-mode yes</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 守护进程，修改为yes后即可后台运行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">daemonize yes </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 密码，设置后访问Redis必须输入密码，推荐设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">requirepass chengredis</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 监听的端口</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port 6379</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作目录，默认是当前目录，也就是运行redis-server时的命令，日志、持久化等文件会保存在这个目录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dir .</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据库数量，设置为1，代表只使用1个库，默认有16个库，编号0~15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases 15</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置redis能够使用的最大内存</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxmemory 512mb</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件，默认为空，不记录日志，可以指定日志文件名</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logfile </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;redis.log&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志级别，debug，verbos，**notice**，**warning**</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loglevel</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置客户端空闲多少秒后关闭连接，默认0表示永不超时</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timeout 300</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置TCP连接队列的大小，当大量并发连接请求到来时，有助于处理排队连接请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tcp-backlog 511</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 对访问客户端的一种心跳检测，每隔n秒检测一次,单位为秒，如果设置为0，则不会进行Keepalive检测，建议设置成60 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tcp-keepalive</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#存放pid文件的位置，每个实例会产生一个不同的pid文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pidfile</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 定义RDB持久化的策略，即在满足给定时间内发生指定次数的数据更改时自动保存数据到磁盘。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save &lt;seconds&gt; &lt;changes&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 900 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 300 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 60 10000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否启用RDB文件的压缩存储</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rdbcompression yes/no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否开启AOF（Append-only File）持久化模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appendonly yes/no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置AOF同步磁盘的频率，always表示每次写入都同步，everysec表示每秒同步一次，no表示由操作系统决定何时同步。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">appendfsync always/everysec/no</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置Redis最大使用内存大小，达到这个限制后，需要配置相应的淘汰策略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxmemory &lt;bytes&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置当内存达到maxmemory限制时如何淘汰数据的策略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxmemory-policy noeviction/lru/ttl/volatile-lru/volatile-ttl/allkeys-lru/allkeys-random</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 包含其他配置文件，便于模块化配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">include other.conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">##### 配置文件</span></span></code></pre></div><h3 id="_6、redis命令" tabindex="-1">6、Redis命令 <a class="header-anchor" href="#_6、redis命令" aria-label="Permalink to &quot;6、Redis命令&quot;">​</a></h3><ul><li>设置密码</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirepass</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirepass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;linux&quot;</span></span></code></pre></div><ul><li>连接与认证</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redis-cli</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ip] -p [port]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检测与Redis服务器的连接状态</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ping</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果Redis服务器启用了密码验证，则使用此命令进行身份验证</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">auth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [password]</span></span></code></pre></div><ul><li>键操作</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全世界都知道了，就不一个一个写解释了</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">del</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [key </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">...]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">exists</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">expire</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> seconds</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ttl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index</span></span></code></pre></div><ul><li>持久化</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># rdb 同步和异步持久化 （阻塞和不阻塞）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bgsave</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 晴空当前和所有数据库key，慎用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flushdb</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">flushall</span></span></code></pre></div><ul><li><strong>服务器信息</strong></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 提供服务器的信息和统计数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 慢日志</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slowlog</span></span></code></pre></div>`,44),p=[e];function t(h,k,d,r,c,o){return a(),i("div",null,p)}const F=s(l,[["render",t]]);export{y as __pageData,F as default};
