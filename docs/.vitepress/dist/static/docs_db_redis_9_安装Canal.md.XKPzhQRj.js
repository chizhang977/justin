import{_ as s,c as a,o as i,a3 as n,cc as l,cd as e,ce as p}from"./chunks/framework.BSgsMaz1.js";const C=JSON.parse('{"title":"9_安装Canal","description":"","frontmatter":{"icon":"Redis","title":"9_安装Canal"},"headers":[],"relativePath":"docs/db/redis/9_安装Canal.md","filePath":"docs/db/redis/9_安装Canal.md","lastUpdated":1714888091000}'),t={name:"docs/db/redis/9_安装Canal.md"},h=n('<h1 id="安装和配置canal" tabindex="-1">安装和配置Canal <a class="header-anchor" href="#安装和配置canal" aria-label="Permalink to &quot;安装和配置Canal&quot;">​</a></h1><p>下面我们就开启mysql的主从同步机制，让Canal来模拟salve</p><h1 id="_1-开启mysql主从" tabindex="-1">1.开启MySQL主从 <a class="header-anchor" href="#_1-开启mysql主从" aria-label="Permalink to &quot;1.开启MySQL主从&quot;">​</a></h1><p>Canal是基于MySQL的主从同步功能，因此必须先开启MySQL的主从功能才可以。</p><p>这里以之前用Docker运行的mysql为例：</p><h2 id="_1-1-开启binlog" tabindex="-1">1.1.开启binlog <a class="header-anchor" href="#_1-1-开启binlog" aria-label="Permalink to &quot;1.1.开启binlog&quot;">​</a></h2><p>打开mysql容器挂载的日志文件，我的在<code>/tmp/mysql/conf</code>目录:</p><p><img src="'+l+`" alt="image-20210813153241537"></p><p>修改文件：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp/mysql/conf/my.cnf</span></span></code></pre></div><p>添加内容：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log-bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/var/lib/mysql/mysql-bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">binlog-do-db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=heima</span></span></code></pre></div><p>配置解读：</p><ul><li><code>log-bin=/var/lib/mysql/mysql-bin</code>：设置binary log文件的存放地址和文件名，叫做mysql-bin</li><li><code>binlog-do-db=heima</code>：指定对哪个database记录binary log events，这里记录heima这个库</li></ul><p>最终效果：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">skip-name-resolve</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">character_set_server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=utf8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">datadir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/var/lib/mysql</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server-id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log-bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/var/lib/mysql/mysql-bin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">binlog-do-db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=heima</span></span></code></pre></div><h2 id="_1-2-设置用户权限" tabindex="-1">1.2.设置用户权限 <a class="header-anchor" href="#_1-2-设置用户权限" aria-label="Permalink to &quot;1.2.设置用户权限&quot;">​</a></h2><p>接下来添加一个仅用于数据同步的账户，出于安全考虑，这里仅提供对heima这个库的操作权限。</p><div class="language-mysql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">mysql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>create user canal@&#39;%&#39; IDENTIFIED by &#39;canal&#39;;</span></span>
<span class="line"><span>GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT,SUPER ON *.* TO &#39;canal&#39;@&#39;%&#39; identified by &#39;canal&#39;;</span></span>
<span class="line"><span>FLUSH PRIVILEGES;</span></span></code></pre></div><p>重启mysql容器即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker restart mysql</span></span></code></pre></div><p>测试设置是否成功：在mysql控制台，或者Navicat中，输入命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>show master status;</span></span></code></pre></div><p><img src="`+e+'" alt="image-20200327094735948"></p><h1 id="_2-安装canal" tabindex="-1">2.安装Canal <a class="header-anchor" href="#_2-安装canal" aria-label="Permalink to &quot;2.安装Canal&quot;">​</a></h1><h2 id="_2-1-创建网络" tabindex="-1">2.1.创建网络 <a class="header-anchor" href="#_2-1-创建网络" aria-label="Permalink to &quot;2.1.创建网络&quot;">​</a></h2><p>我们需要创建一个网络，将MySQL、Canal、MQ放到同一个Docker网络中：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heima</span></span></code></pre></div><p>让mysql加入这个网络：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> connect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> heima</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mysql</span></span></code></pre></div><h2 id="_2-3-安装canal" tabindex="-1">2.3.安装Canal <a class="header-anchor" href="#_2-3-安装canal" aria-label="Permalink to &quot;2.3.安装Canal&quot;">​</a></h2><p>课前资料中提供了canal的镜像压缩包:</p><p><img src="'+p+`" alt="image-20210813161804292"></p><p>大家可以上传到虚拟机，然后通过命令导入：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker load -i canal.tar</span></span></code></pre></div><p>然后运行命令创建Canal容器：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 11111:11111</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> canal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.destinations=heima</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.master.address=mysql:3306</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.dbUsername=canal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.dbPassword=canal</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.connectionCharset=UTF-8</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.tsdb.enable=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.gtidon=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-e </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal.instance.filter.regex=heima</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\\\</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--network </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">heima</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">-d </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">canal/canal-server:v1.1.5</span></span></code></pre></div><p>说明:</p><ul><li><code>-p 11111:11111</code>：这是canal的默认监听端口</li><li><code>-e canal.instance.master.address=mysql:3306</code>：数据库地址和端口，如果不知道mysql容器地址，可以通过<code>docker inspect 容器id</code>来查看</li><li><code>-e canal.instance.dbUsername=canal</code>：数据库用户名</li><li><code>-e canal.instance.dbPassword=canal</code> ：数据库密码</li><li><code>-e canal.instance.filter.regex=</code>：要监听的表名称</li></ul><p>表名称监听支持的语法：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>mysql 数据解析关注的表，Perl正则表达式.</span></span>
<span class="line"><span>多个正则之间以逗号(,)分隔，转义符需要双斜杠(\\\\) </span></span>
<span class="line"><span>常见例子：</span></span>
<span class="line"><span>1.  所有表：.*   or  .*\\\\..*</span></span>
<span class="line"><span>2.  canal schema下所有表： canal\\\\..*</span></span>
<span class="line"><span>3.  canal下的以canal打头的表：canal\\\\.canal.*</span></span>
<span class="line"><span>4.  canal schema下的一张表：canal.test1</span></span>
<span class="line"><span>5.  多个规则组合使用然后以逗号隔开：canal\\\\..*,mysql.test1,mysql.test2</span></span></code></pre></div>`,41),c=[h];function k(d,r,o,g,y,F){return i(),a("div",null,c)}const m=s(t,[["render",k]]);export{C as __pageData,m as default};
