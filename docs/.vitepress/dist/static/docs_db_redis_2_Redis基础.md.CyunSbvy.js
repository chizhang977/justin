import{_ as s,c as i,o as a,a3 as n}from"./chunks/framework.BSgsMaz1.js";const y=JSON.parse('{"title":"2_Redis基本数据类型","description":"","frontmatter":{"title":"2_Redis基本数据类型","icon":"Redis","deep":3,"date":"2024-04-10T00:00:00.000Z"},"headers":[],"relativePath":"docs/db/redis/2_Redis基础.md","filePath":"docs/db/redis/2_Redis基础.md","lastUpdated":1714888091000}'),l={name:"docs/db/redis/2_Redis基础.md"},e=n(`<h1 id="_2-redis基础" tabindex="-1">2_Redis基础 <a class="header-anchor" href="#_2-redis基础" aria-label="Permalink to &quot;2_Redis基础&quot;">​</a></h1><h3 id="_1、五大数据类型" tabindex="-1">1、五大数据类型 <a class="header-anchor" href="#_1、五大数据类型" aria-label="Permalink to &quot;1、五大数据类型&quot;">​</a></h3><h4 id="_1、1-string" tabindex="-1">1、1 String <a class="header-anchor" href="#_1、1-string" aria-label="Permalink to &quot;1、1 String&quot;">​</a></h4><h5 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h5><ul><li>字符串（Value 可以是String，int，float）</li><li>字节数组形式存储，不能超过512M</li><li>可以存储对象</li></ul><h5 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h5><ul><li><code>添加</code></li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加或者修改</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 批量添加多个String类型的键值对</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不存在就添加</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setnx</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加键值对的时候指定有效期</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setex</span></span></code></pre></div><ul><li>获取</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">strlen</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span></code></pre></div><ul><li>增加/减少：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> incr/decr</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> incrby/decrby</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span></code></pre></div><h4 id="_1、2-hash" tabindex="-1">1、2 Hash <a class="header-anchor" href="#_1、2-hash" aria-label="Permalink to &quot;1、2 Hash&quot;">​</a></h4><h5 id="介绍-1" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-1" aria-label="Permalink to &quot;介绍&quot;">​</a></h5><ul><li>Hash类型，也叫散列，其value是一个无序字典，类似于Java中的HashMap结构</li><li>推荐存储对象</li></ul><h5 id="命令-类似于string命令" tabindex="-1">命令(类似于string命令) <a class="header-anchor" href="#命令-类似于string命令" aria-label="Permalink to &quot;命令(类似于string命令)&quot;">​</a></h5><ul><li>添加</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HSET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> field</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HMSET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HSETNX</span></span></code></pre></div><ul><li>获取</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HGET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> field</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HMGET</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HGETALL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HKEYS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HVALS</span></span></code></pre></div><ul><li>增加/减少</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HINCRBY</span></span></code></pre></div><h4 id="_1、3-列表list" tabindex="-1">1、3 列表List <a class="header-anchor" href="#_1、3-列表list" aria-label="Permalink to &quot;1、3 列表List&quot;">​</a></h4><h5 id="介绍-2" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-2" aria-label="Permalink to &quot;介绍&quot;">​</a></h5><ul><li>底层为一个双向链表，类似于Java中LinkedList</li><li>单键多值</li><li>有序，元素可以重复</li><li>插入和删除较快</li></ul><h5 id="命令-1" tabindex="-1">命令 <a class="header-anchor" href="#命令-1" aria-label="Permalink to &quot;命令&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#从左/右插入一个或多个值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPUSH/RPUSH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value.......</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在value后边插入newvalue</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LINSERT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> before/after</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newvalue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从左/右弹出一个值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LPOP/RPOP</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 与LPOP和RPOP类似，只不过在没有元素时等待指定时间，而不是直接返回nil</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BLPOP和BRPOP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 从左边删除n个value值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LREM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取 按照索引获取</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取列表长度</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LLEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 将列表key下标为index值替换成value</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> value</span></span></code></pre></div><h4 id="_1、4-集合set" tabindex="-1">1、4 集合set <a class="header-anchor" href="#_1、4-集合set" aria-label="Permalink to &quot;1、4  集合set&quot;">​</a></h4><h5 id="介绍-3" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-3" aria-label="Permalink to &quot;介绍&quot;">​</a></h5><p>Redis的Set结构与Java中的HashSet类似，可以看做是一个value为null的HashMap。</p><ul><li>无序</li><li>元素不可重复</li><li>查找快</li><li>支持交集.并集.差集等功能</li></ul><h5 id="命令-2" tabindex="-1">命令 <a class="header-anchor" href="#命令-2" aria-label="Permalink to &quot;命令&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 向set中添加一个或多个元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SADD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 移除set中的指定元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SREM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回set中元素的个数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SCARD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 判断一个元素是否存在于set中</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SISMEMBER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取set中的所有元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SMEMBERS：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 交集、差集、并集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SINTER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SDIFF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SUNION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key2</span></span></code></pre></div><h4 id="_1、5-有序集合zset-sorted-set" tabindex="-1">1、5 有序集合zset（sorted set） <a class="header-anchor" href="#_1、5-有序集合zset-sorted-set" aria-label="Permalink to &quot;1、5 有序集合zset（sorted set）&quot;">​</a></h4><h5 id="介绍-4" tabindex="-1">介绍 <a class="header-anchor" href="#介绍-4" aria-label="Permalink to &quot;介绍&quot;">​</a></h5><p>Redis 的 SortedSet（有序集合）是一个具有独特特性的数据结构，它结合了两种数据结构的优势：Map 和 TreeSet。SortedSet 中的元素带有 score 属性，能基于 score 进行排序，并且不包含重复元素。其底层采用跳表和哈希表实现，保证了高效查询、排序和访问中间元素的能力。</p><p>SortedSet 主要特性包括：</p><ol><li>元素不重复且可排序，排序依据为元素所关联的 score。</li><li>支持快速根据 score 或者位置查询特定范围内的元素。</li><li>适用于实现排行榜、索引列表等场景，可以同时获取元素及其对应的权重或排名。</li></ol><p>zset底层使用了两个数据结构</p><p>（1）hash，hash的作用就是关联元素value和权重score，保障元素value的唯一性，可以通过元素value找到相应的score值。</p><p>（2）跳跃表，跳跃表的目的在于给元素value排序，根据score的范围获取元素列表。</p><h5 id="命令-3" tabindex="-1">命令 <a class="header-anchor" href="#命令-3" aria-label="Permalink to &quot;命令&quot;">​</a></h5><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加一个或多个元素到sorted set ，如果已经存在则更新其score值</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZADD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> score</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除sorted set中的一个指定元素</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZREM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取指定元素的 score</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取指定元素的 排名</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZRANK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取zset 元素的个数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZCARD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取指定范围score内元素的个数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZCOUNT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 指定元素分数增加 increment</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZINCRBY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> increment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按照score排序后，获取指定排名范围内的元素（index）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZRANGE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 按照score排序后，获取指定score范围内的元素 （score）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZRANGEBYSCORE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> key</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> min</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> max</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#差集.交集.并集</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZDIFF</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZINTER</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ZUNION</span></span></code></pre></div>`,43),h=[e];function t(p,k,r,d,F,c){return a(),i("div",null,h)}const o=s(l,[["render",t]]);export{y as __pageData,o as default};
