import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.Dcf-1z4i.js";const g=JSON.parse('{"title":"4_Dokcer容器的数据卷","description":"","frontmatter":{"icon":"docker"},"headers":[],"relativePath":"docs/linux/docker/Dokcer数据卷.md","filePath":"docs/linux/docker/Dokcer数据卷.md","lastUpdated":1716523517000}'),t={name:"docs/linux/docker/Dokcer数据卷.md"},h=e('<h1 id="_4-dokcer容器的数据卷" tabindex="-1">4_Dokcer容器的数据卷 <a class="header-anchor" href="#_4-dokcer容器的数据卷" aria-label="Permalink to &quot;4_Dokcer容器的数据卷&quot;">​</a></h1><h3 id="数据卷" tabindex="-1">数据卷 <a class="header-anchor" href="#数据卷" aria-label="Permalink to &quot;数据卷&quot;">​</a></h3><ul><li>就是为了保存数据，因为容器中的数据，不提交成为镜像，容器删除后，数据也就没了</li><li>做持久化的</li></ul><h3 id="数据卷目的" tabindex="-1">数据卷目的 <a class="header-anchor" href="#数据卷目的" aria-label="Permalink to &quot;数据卷目的&quot;">​</a></h3><p>卷的设计目的就是数据的持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷</p><h3 id="特点" tabindex="-1">特点： <a class="header-anchor" href="#特点" aria-label="Permalink to &quot;特点：&quot;">​</a></h3><p>1：数据卷可在容器之间共享或重用数据</p><p>2：卷中的更改可以直接生效</p><p>3：数据卷中的更改不会包含在镜像的更新中</p><p>4：数据卷的生命周期一直持续到没有容器使用它为止</p><h3 id="添加数据卷" tabindex="-1">添加数据卷 <a class="header-anchor" href="#添加数据卷" aria-label="Permalink to &quot;添加数据卷&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /宿主机绝对路径目录：/容器内目录</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --privileged=true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 镜像名</span></span></code></pre></div><p>是否挂在成功，成功后容器和宿主机之间数据共享，容器停止推出后，主机修改后数据依然同步</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> inspect</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 容器id</span></span></code></pre></div><h3 id="带权限的数据卷" tabindex="-1">带权限的数据卷 <a class="header-anchor" href="#带权限的数据卷" aria-label="Permalink to &quot;带权限的数据卷&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /宿主机绝对路径目录：/容器内目录:ro/rw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 镜像名</span></span></code></pre></div><h3 id="卷的继承和共享" tabindex="-1">卷的继承和共享 <a class="header-anchor" href="#卷的继承和共享" aria-label="Permalink to &quot;卷的继承和共享&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --privileged=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /mydocker/u:/tmp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --privileged=true</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --volumes-from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 父类</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ubuntu</span></span></code></pre></div>',19),l=[h];function n(p,k,r,d,o,c){return a(),i("div",null,l)}const u=s(t,[["render",n]]);export{g as __pageData,u as default};
