import{_ as s,c as a,o as n,a3 as p}from"./chunks/framework.S_t1wJ0Y.js";const u=JSON.parse('{"title":"2_Docker常用命令","description":"","frontmatter":{"icon":"docker","date":"2024-03-25T00:00:00.000Z"},"headers":[],"relativePath":"docs/linux/docker/Docker常用命令.md","filePath":"docs/linux/docker/Docker常用命令.md","lastUpdated":1714888091000}'),e={name:"docs/linux/docker/Docker常用命令.md"},i=p(`<h1 id="_2-docker常用命令" tabindex="-1">2_Docker常用命令 <a class="header-anchor" href="#_2-docker常用命令" aria-label="Permalink to &quot;2_Docker常用命令&quot;">​</a></h1><h3 id="一、帮助命令" tabindex="-1">一、帮助命令 <a class="header-anchor" href="#一、帮助命令" aria-label="Permalink to &quot;一、帮助命令&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker version</span></span>
<span class="line"><span>docker info </span></span>
<span class="line"><span>docker --help</span></span></code></pre></div><h3 id="二、镜像命令" tabindex="-1">二、镜像命令 <a class="header-anchor" href="#二、镜像命令" aria-label="Permalink to &quot;二、镜像命令&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker images</span></span>
<span class="line"><span># -a：列出本地所有的镜像</span></span>
<span class="line"><span># -q：只显示出镜像ID</span></span>
<span class="line"><span># --digests：显示镜像的摘要信息</span></span>
<span class="line"><span># --no-trunc：显示完整的镜像信息</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker search 镜像名 #搜素镜像</span></span>
<span class="line"><span># --no-trunc：显示完整镜像描述</span></span>
<span class="line"><span># -s： 列出收藏数不小于之指定的镜像</span></span>
<span class="line"><span># --automated： 只列出automated build 类型的镜像</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker pull 镜像名:tag #下载镜像</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker rmi 镜像名 #删除镜像</span></span>
<span class="line"><span># -f 镜像ID    删除单个</span></span>
<span class="line"><span># -f 镜像1:tag 镜像2:tag 删除多个</span></span>
<span class="line"><span># -f $(docker images -qa) 删除全部</span></span></code></pre></div><h3 id="三、容器命令" tabindex="-1">三、容器命令 <a class="header-anchor" href="#三、容器命令" aria-label="Permalink to &quot;三、容器命令&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker run 【options】 image  #新建容器启动镜像</span></span>
<span class="line"><span># --name=&quot;&quot;:为容器指定一个名称</span></span>
<span class="line"><span># -d：后台运行容器，并返回容器的ID，启动守护式容器</span></span>
<span class="line"><span># -i：交互模式运行容器</span></span>
<span class="line"><span># -t：为容器分配一个伪输入终端</span></span>
<span class="line"><span># -P：随检端口映射</span></span>
<span class="line"><span># -p：ip：hostport：containerPort</span></span>
<span class="line"><span>			ip：containerPort</span></span>
<span class="line"><span>			hostPort：containerPort</span></span>
<span class="line"><span>			containerPort</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker ps # 列出当前运行的容器</span></span>
<span class="line"><span># -a：列出当前所有正在运行的容器+历史上运行过的</span></span>
<span class="line"><span># -l：显示最近创建的容器</span></span>
<span class="line"><span># -n：显示最精n个创建的容器</span></span>
<span class="line"><span># -q： 静默模式，只显示容器的编号</span></span>
<span class="line"><span># --no-trunc：不断输出</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>exit #容器停止推出</span></span>
<span class="line"><span>ctrl+P+Q # 容器不停止推出</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker start xxx # 启动容器</span></span>
<span class="line"><span>docker restart xxx # 重启</span></span>
<span class="line"><span>docker stop xxx # 停止</span></span>
<span class="line"><span>docker kill xxx # 强制停止容器</span></span>
<span class="line"><span>docker rm xxx #删除</span></span>
<span class="line"><span>docker rm -f $(docker ps -q -a)</span></span>
<span class="line"><span>docker ps -a -q | xargs docker rm</span></span></code></pre></div><h3 id="三、其他命令" tabindex="-1">三、其他命令 <a class="header-anchor" href="#三、其他命令" aria-label="Permalink to &quot;三、其他命令&quot;">​</a></h3><p>查看日志</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker logs -f -t --tail #查看容器日志</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -t：时间戳</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -f：日志打印</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># --tail：数字 显示最后多少条</span></span></code></pre></div><p>查看容器细节</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker top xxx # 查看容器内运行的进程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker inspect xxx # 查看容器内部的细节</span></span></code></pre></div><p>进入容器内</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># attach 直接进入容器启动命令的终端，不会启动新的进程</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># exec 是在容器中打开的新的终端，启动新的进程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker exec - it xxx bash</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker attach xxx</span></span></code></pre></div><p>宿主机和容器文件的复制</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker cp 容器id：容器内路径 目的主机路径</span></span></code></pre></div><p>提交改变 将自己修改好的镜像提交</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	docker commit -m </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;修改&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> -a </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;作者&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 容器id 新的镜像名</span></span></code></pre></div><p>镜像传输</p><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 将镜像保存成压缩包</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	docker save -o myredis.tar redis:6.2.14</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	# 别的机器加载这个镜像</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	docker load -i myredis.tar</span></span></code></pre></div>`,26),t=[i];function l(c,o,d,h,r,k){return n(),a("div",null,t)}const v=s(e,[["render",l]]);export{u as __pageData,v as default};
