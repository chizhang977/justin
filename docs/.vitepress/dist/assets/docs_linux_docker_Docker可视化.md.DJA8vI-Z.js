import{_ as a,c as i,o as s,a4 as r}from"./chunks/framework.Dcf-1z4i.js";const F=JSON.parse('{"title":"9_2_docker Portainer","description":"","frontmatter":{"icon":"docker"},"headers":[],"relativePath":"docs/linux/docker/Docker可视化.md","filePath":"docs/linux/docker/Docker可视化.md","lastUpdated":1716523517000}'),e={name:"docs/linux/docker/Docker可视化.md"},t=r(`<h1 id="_9-2-docker-portainer" tabindex="-1">9_2_docker Portainer <a class="header-anchor" href="#_9-2-docker-portainer" aria-label="Permalink to &quot;9_2_docker Portainer&quot;">​</a></h1><h2 id="引言" tabindex="-1"><strong>引言</strong> <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;**引言**&quot;">​</a></h2><p>在容器化技术的世界中，Docker已成为构建、部署和运行应用程序的标准工具。然而，对于复杂环境下的容器管理和运维，一个直观、易用的图形界面往往能极大地提升工作效率。Portainer正是这样一个轻量级且功能强大的Docker管理工具，它提供了一站式的解决方案，帮助用户轻松地在单个主机或集群环境中部署和管理Docker容器和服务。</p><h2 id="一、portainer简介" tabindex="-1"><strong>一、Portainer简介</strong> <a class="header-anchor" href="#一、portainer简介" aria-label="Permalink to &quot;**一、Portainer简介**&quot;">​</a></h2><p>Portainer（官方网站：<a href="https://www.portainer.io/" target="_blank" rel="noreferrer">https://www.portainer.io/</a> ）是一个开源项目，专为简化Docker和Kubernetes的日常管理工作而设计。它通过简洁明了的Web UI，使得无论是初学者还是经验丰富的开发者都能方便地进行镜像管理、容器生命周期操作、网络配置、卷管理以及用户权限控制等任务。</p><h2 id="二、portainer的安装" tabindex="-1"><strong>二、Portainer的安装</strong> <a class="header-anchor" href="#二、portainer的安装" aria-label="Permalink to &quot;**二、Portainer的安装**&quot;">​</a></h2><ol><li><p><strong>拉取Portainer镜像</strong> 在命令行中输入以下命令来获取最新版本的Portainer CE（Community Edition）：</p><p>Bash</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portainer/portainer-ce:latest</span></span></code></pre></div><ol start="2"><li><p><strong>创建数据卷持久化存储</strong> 为了持久保存Portainer的服务数据（如设置、凭据等），可以创建并挂载数据卷：</p><p>Bash</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portainer_data</span></span></code></pre></div><ol start="3"><li><p><strong>启动Portainer容器</strong> 使用以下命令运行Portainer容器，并将本地Docker守护进程套接字映射到容器内，同时挂载上一步创建的数据卷：</p><p>Bash</p></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8000:8000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 9000:9000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name=portainer</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/run/docker.sock:/var/run/docker.sock</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> portainer_data:/data</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   --restart=always</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   portainer/portainer-ce</span></span></code></pre></div><p>这个命令做了以下几件事：</p><ul><li><code>-d</code> 表示在后台运行容器。</li><li><code>-p 8000:8000</code> 将宿主机的8000端口映射到容器的8000端口，用于HTTP连接。</li><li><code>-p 9000:9000</code> （可选）如果需要HTTPS连接，则映射9000端口。</li><li><code>--name=portainer</code> 给容器命名。</li><li><code>-v /var/run/docker.sock:/var/run/docker.sock</code> 把Docker守护进程的套接字文件挂载到容器内。</li><li><code>-v portainer_data:/data</code> 创建一个数据卷挂载点，持久化Portainer的数据。</li><li><code>-restart=always</code> 设置容器总是重启策略，确保服务持续可用。</li><li>最后指定了要运行的镜像名称。</li></ul><ol start="4"><li><strong>访问Portainer Web界面</strong> 在浏览器中输入 <code>http://localhost:8000</code> 或宿主机IP及端口即可打开Portainer登录页面。首次访问时，需要设置管理员账户信息以初始化环境。</li></ol><h2 id="三、portainer的主要功能特性" tabindex="-1"><strong>三、Portainer的主要功能特性</strong> <a class="header-anchor" href="#三、portainer的主要功能特性" aria-label="Permalink to &quot;**三、Portainer的主要功能特性**&quot;">​</a></h2><ul><li><strong>资源管理</strong>：Portainer提供对主机上的所有Docker资源进行统一视图管理，包括容器、镜像、网络、卷和插件等。</li><li><strong>容器操作</strong>：支持一键创建、启动、停止、重启、迁移和删除容器，还可以查看容器日志和执行终端命令。</li><li><strong>服务管理</strong>：在Docker Swarm模式下，可便捷地创建、更新和删除服务。</li><li><strong>模板应用</strong>：内置应用模板库，支持快速部署预配置的应用栈。</li><li><strong>安全性与权限控制</strong>：支持多用户登录和基于角色的访问控制（RBAC），确保不同团队成员仅能访问自己负责的部分。</li><li><strong>远程连接</strong>：不仅限于本机Docker实例，还可连接至远程Docker主机或者Swarm集群进行管理。</li><li><strong>备份与恢复</strong>：通过简单的UI操作实现对Portainer自身配置和关联Docker资源的备份和恢复。</li></ul><h2 id="四、进阶使用" tabindex="-1"><strong>四、进阶使用</strong> <a class="header-anchor" href="#四、进阶使用" aria-label="Permalink to &quot;**四、进阶使用**&quot;">​</a></h2><p>对于高级用户，Portainer还支持自定义API端点、TLS加密连接、以及集成其他云提供商等功能。通过细致的配置，Portainer可以在复杂的IT架构中发挥重要作用，有效降低容器管理的复杂性。</p><h2 id="结语" tabindex="-1"><strong>结语</strong> <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;**结语**&quot;">​</a></h2><p>Portainer作为一款全面的Docker管理工具，以其友好的界面和强大的功能赢得了广大开发者的青睐。掌握Portainer的使用都将使您的容器管理工作事半功倍。只需几步简单的操作，即可开启您的可视化Docker之旅，让容器管理变得更加简单高效。</p>`,21),n=[t];function o(l,p,h,k,d,c){return s(),i("div",null,n)}const u=a(e,[["render",o]]);export{F as __pageData,u as default};
