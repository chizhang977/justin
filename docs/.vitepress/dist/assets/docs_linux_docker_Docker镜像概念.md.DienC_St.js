import{_ as s,c as i,o as a,a3 as e}from"./chunks/framework.Di-rThNJ.js";const g=JSON.parse('{"title":"Docker镜像概念","description":"","frontmatter":{"icon":"docker"},"headers":[],"relativePath":"docs/linux/docker/Docker镜像概念.md","filePath":"docs/linux/docker/Docker镜像概念.md","lastUpdated":1714888091000}'),l={name:"docs/linux/docker/Docker镜像概念.md"},t=e(`<h1 id="docker镜像概念" tabindex="-1">Docker镜像概念 <a class="header-anchor" href="#docker镜像概念" aria-label="Permalink to &quot;Docker镜像概念&quot;">​</a></h1><h3 id="unionfs-联合文件系统" tabindex="-1">UnionFS(联合文件系统)： <a class="header-anchor" href="#unionfs-联合文件系统" aria-label="Permalink to &quot;UnionFS(联合文件系统)：&quot;">​</a></h3><p>一种分层、轻量级、高性能的文件系统，支持对文件系统的修改作为一次提交来一层层的叠加，同时可以将不同目录挂在到同一个虚拟文件系统下。作为Docker镜像的基础，镜像通过分层来继承，基于基础镜像，制作各种具体的应用镜像。</p><h3 id="docker镜像加载的原理" tabindex="-1">Docker镜像加载的原理： <a class="header-anchor" href="#docker镜像加载的原理" aria-label="Permalink to &quot;Docker镜像加载的原理：&quot;">​</a></h3><ul><li>当拉取或创建一个新的Docker镜像时，实际上是从远程仓库下载各层的元数据和实际数据，或者根据Dockerfile指令逐步构建各个层。</li><li>启动容器时，Docker会依据镜像的层次结构，从最底层开始逐层挂载，并最后挂载可写层。</li></ul><h3 id="分层结构的优点" tabindex="-1">分层结构的优点 <a class="header-anchor" href="#分层结构的优点" aria-label="Permalink to &quot;分层结构的优点&quot;">​</a></h3><details class="details custom-block"><summary>资源共享</summary><ul><li>多个容器可以共享相同的镜像层，这意味着存储空间得以高效利用。比如，多个基于相同操作系统基础镜像的容器只需在磁盘上保留一份该操作系统的副本。</li></ul></details><details class="details custom-block"><summary>存储效率</summary><ul><li>当对一个已存在的镜像进行修改时，只需要添加一个新的层来记录这些更改，而不是复制整个镜像。这样极大地节省了磁盘空间，尤其是在大型应用环境中，这种差异性存储策略非常有效。</li></ul></details><details class="details custom-block"><summary>镜像构建和传输速度</summary><ul><li>分层结构使得镜像构建过程中，只有新增或更新的部分需要重新构建。在传输镜像时，如果目标环境已有部分层，则只需传输新的层即可，大大加快了镜像的分发和部署速度。</li></ul></details><details class="details custom-block"><summary>易维护与升级</summary><ul><li>镜像的每一层代表了一个独立的操作或配置步骤，这使得更新和回滚变得非常方便。开发者可以针对某一特定层进行修改或替换，而不会影响到其他层的内容。</li></ul></details><details class="details custom-block"><summary>复用性和模块化</summary><ul><li>分层设计鼓励模块化和组件化，允许开发人员通过组合不同的层来创建新的镜像，实现代码和依赖项的复用，简化了复杂应用程序的容器化过程。</li></ul></details><details class="details custom-block"><summary>安全性与隔离性</summary><ul><li>每一层的不可变特性增强了容器的安全性，因为底层镜像即使存在漏洞，在不影响其他层的情况下也可以单独修复。</li></ul></details><h3 id="docker镜像的特点" tabindex="-1">Docker镜像的特点： <a class="header-anchor" href="#docker镜像的特点" aria-label="Permalink to &quot;Docker镜像的特点：&quot;">​</a></h3><ul><li>Docker镜像层都是只读的，容器层可写的</li><li>Docker镜像有容器层和镜像层</li><li>当容器启动时，一个新的可写层被加载到镜像的顶部</li></ul><h3 id="docker镜像提交" tabindex="-1">Docker镜像提交 <a class="header-anchor" href="#docker镜像提交" aria-label="Permalink to &quot;Docker镜像提交&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker commit #提交容器副本成为一个新的镜像</span></span>
<span class="line"><span>docker commit -m a=&quot;author&quot; 容器id 目标镜像名：tag</span></span></code></pre></div><h3 id="docker镜像发布到阿里云" tabindex="-1">Docker镜像发布到阿里云 <a class="header-anchor" href="#docker镜像发布到阿里云" aria-label="Permalink to &quot;Docker镜像发布到阿里云&quot;">​</a></h3><ol><li><p><a href="https://promotion.aliyun.com/ntms/act/kubernetes.html" target="_blank" rel="noreferrer">阿里云开发平台</a></p></li><li><p>容器镜像服务ACR</p></li><li><p>开通，选择个人实例</p></li><li><p>创建命名空间</p></li><li><p>创建名称，点击管理</p></li><li><p>推送或拉取</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --username=aliyun6765066895</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry.cn-hangzhou.aliyuncs.com</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  #登陆</span></span></code></pre></div><p>用于登录的用户名为阿里云账号全名，密码为开通服务时设置的密码。</p><p>您可以在访问凭证页面修改凭证密码。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry.cn-hangzhou.aliyuncs.com/upjustin/justinubuntu:[镜像版本号]</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   #拉取</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --username=aliyun6765066895</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry.cn-hangzhou.aliyuncs.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ImageId] registry.cn-hangzhou.aliyuncs.com/upjustin/justinubuntu:[镜像版本号]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry.cn-hangzhou.aliyuncs.com/upjustin/justinubuntu:[镜像版本号]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#推送</span></span></code></pre></div></li></ol><h3 id="docker镜像发布到本地云" tabindex="-1">Docker镜像发布到本地云 <a class="header-anchor" href="#docker镜像发布到本地云" aria-label="Permalink to &quot;Docker镜像发布到本地云&quot;">​</a></h3><ul><li><p><a href="http://hub.docker.com" target="_blank" rel="noreferrer">DockerHub</a> 访问太慢，被阿里云网易云取代，这些又不方便，机密的东西不可能发布到公网，所以要创建一个本地私人仓库使用</p></li><li><p>Docker Registry是官方提供的工具，用于构建私有镜像仓库</p></li><li><p>如何做？</p><ul><li>下载镜像Docker Registry</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span></code></pre></div><ul><li>运行私有库，相当本地的docker hub</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 5000:5000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /justin/myregistry/:/tmp/registry</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --privileged=true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span></span></code></pre></div><ul><li>curl查看私有库镜像</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -XGET</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://ip:port/v2/_catalog</span></span></code></pre></div><ul><li>修改符合规范tag</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># docker tag 镜像:tag Host:port/Repository:Tag</span></span></code></pre></div><ul><li>修改配置文件支持http</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/docker/daemon.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;insecure-registries&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;ip:port&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">]</span></span></code></pre></div><p>重启docker</p><ul><li>push推送至私有库</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker push 符合规范的tag</span></span>
<span class="line"><span>#验证</span></span></code></pre></div></li></ul><h3 id="推荐本地云的可视化插件" tabindex="-1">推荐本地云的可视化插件 <a class="header-anchor" href="#推荐本地云的可视化插件" aria-label="Permalink to &quot;推荐本地云的可视化插件&quot;">​</a></h3><div class="language-docker vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">docker</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">docker pull joxit/docker-registry-ui:1.5-static</span></span></code></pre></div><ul><li>pull拉取到本地</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>docker pull 符合规范的tag</span></span></code></pre></div>`,24),n=[t];function p(h,o,r,c,k,d){return a(),i("div",null,n)}const F=s(l,[["render",p]]);export{g as __pageData,F as default};
