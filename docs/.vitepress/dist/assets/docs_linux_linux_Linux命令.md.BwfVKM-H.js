import{_ as t,c as s,o as a,a3 as l}from"./chunks/framework.Di-rThNJ.js";const b=JSON.parse('{"title":"Linux命令","description":"","frontmatter":{},"headers":[],"relativePath":"docs/linux/linux/Linux命令.md","filePath":"docs/linux/linux/Linux命令.md","lastUpdated":1715932617000}'),i={name:"docs/linux/linux/Linux命令.md"},d=l(`<h1 id="linux命令" tabindex="-1">Linux命令 <a class="header-anchor" href="#linux命令" aria-label="Permalink to &quot;Linux命令&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><a href="https://www.linuxprobe.com/" target="_blank" rel="noreferrer">Linux就该这么学</a>阅读笔记</li><li><a href="https://www.linuxcool.com/" target="_blank" rel="noreferrer">Linux命令大全(手册)</a></li></ul></div><h2 id="常用工作命令" tabindex="-1">常用工作命令 <a class="header-anchor" href="#常用工作命令" aria-label="Permalink to &quot;常用工作命令&quot;">​</a></h2><ul><li>echo <ul><li>在终端设备上输出字符串或变量提取后的值，语法格式为“echo [字符串] [$变量]”。</li></ul></li><li>date <ul><li>显示或设置系统的时间与日期，语法格式为“date [+指定的格式]”</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>%S</td><td>秒（00～59）</td></tr><tr><td>%M</td><td>分钟（00～59）</td></tr><tr><td>%H</td><td>小时（00～23）</td></tr><tr><td>%I</td><td>小时（00～12）</td></tr><tr><td>%m</td><td>月份（1~12）</td></tr><tr><td>%p</td><td>显示出AM或PM</td></tr><tr><td>%a</td><td>缩写的工作日名称（例如：Sun）</td></tr><tr><td>%A</td><td>完整的工作日名称（例如：Sunday）</td></tr><tr><td>%b</td><td>缩写的月份名称（例如：Jan）</td></tr><tr><td>%B</td><td>完整的月份名称（例如：January）</td></tr><tr><td>%q</td><td>季度（1~4）</td></tr><tr><td>%y</td><td>简写年份（例如：20）</td></tr><tr><td>%Y</td><td>完整年份（例如：2020）</td></tr><tr><td>%d</td><td>本月中的第几天</td></tr><tr><td>%j</td><td>今年中的第几天</td></tr><tr><td>%n</td><td>换行符（相当于按下回车键）</td></tr><tr><td>%t</td><td>跳格（相当于按下Tab键）</td></tr></tbody></table><ul><li>reboot</li><li>poweroff</li><li>wget <ul><li>-b 后台下载</li><li>-P 下载指定目录</li></ul></li><li>ps <ul><li>查看系统中的进程状态</li></ul></li><li>pstree <ul><li>树状图的形式展示进程之间的关系</li></ul></li><li>top <ul><li>动态地监视进程活动及系统负载等信息</li></ul></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li><p>第1行：系统时间、运行时间、登录终端数、系统负载（3个数值分别为1分钟、5分钟、15分钟内的平均值，数值越小意味着负载越低）。</p></li><li><p>第2行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。</p></li><li><p>第3行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。其中数据均为CPU数据并以百分比格式显示，例如“99.9 id”意味着有99.9%的CPU处理器资源处于空闲。</p></li><li><p>第4行：物理内存总量、内存空闲量、内存使用量、作为内核缓存的内存量。</p></li><li><p>第5行：虚拟内存总量、虚拟内存空闲量、虚拟内存使用量、已被提前加载的内存量。</p></li></ul></div><ul><li>pidof <ul><li>idof命令用于查询某个指定服务进程的PID号码值，语法格式为“pidof [参数] 服务名称”</li></ul></li><li>kill</li><li>killall</li></ul><h2 id="系统状态检测命令" tabindex="-1">系统状态检测命令 <a class="header-anchor" href="#系统状态检测命令" aria-label="Permalink to &quot;系统状态检测命令&quot;">​</a></h2><ul><li><strong>ifconfig</strong><ul><li>获取网卡配置与网络状态</li></ul></li><li>uname <ul><li>查看系统内核版本与系统架构</li></ul></li><li>uptime <ul><li>查看系统的负载信息</li><li>显示当前系统时间、系统已运行时间、启用终端数量以及平均负载值等信息。平均负载值指的是系统在最近1分钟、5分钟、15分钟内的压力情况</li></ul></li><li><strong>free</strong><ul><li>内存</li><li>-h</li></ul></li><li>who <ul><li>查看当前登入主机的用户终端信息</li></ul></li><li>last <ul><li>调取主机的被访记录</li></ul></li><li><strong>ping</strong><ul><li>网络连通检测</li></ul></li><li>tracepath <ul><li>显示数据包到达目的主机时途中经过的所有路由信息，语法格式为“tracepath [参数] 域名”</li></ul></li><li><strong>netstat</strong><ul><li>netstat命令用于显示如网络连接、路由表、接口状态等的网络相关信息</li></ul></li></ul><table><thead><tr><th>-a</th><th style="text-align:left;">显示所有连接中的Socket</th></tr></thead><tbody><tr><td>-p</td><td style="text-align:left;">显示正在使用的Socket信息</td></tr><tr><td>-t</td><td style="text-align:left;">显示TCP协议的连接状态</td></tr><tr><td>-u</td><td style="text-align:left;">显示UDP协议的连接状态</td></tr><tr><td>-n</td><td style="text-align:left;">使用IP地址，不使用域名</td></tr><tr><td>-l</td><td style="text-align:left;">仅列出正在监听的服务状态</td></tr><tr><td>-i</td><td style="text-align:left;">显示网卡列表信息</td></tr><tr><td>-r</td><td style="text-align:left;">显示路由表信息</td></tr></tbody></table><ul><li><strong>history</strong><ul><li>显示执行过的命令历史</li><li>自定义<code>/etc/profile</code>文件中的HISTSIZE变量值</li><li>保存到了<code> ~/.bash_history</code></li><li>清空 -c</li></ul></li><li>sosreport <ul><li>收集系统配置及架构信息并输出诊断文档</li></ul></li></ul><h2 id="查找定位文件命令" tabindex="-1">查找定位文件命令 <a class="header-anchor" href="#查找定位文件命令" aria-label="Permalink to &quot;查找定位文件命令&quot;">​</a></h2><ul><li>pwd <ul><li>当前目录</li></ul></li><li>cd <ul><li>cd .. ：返回到上级目录</li><li>cd ~ :返回到家目录</li><li>cd - :返回到上一次目录</li></ul></li><li>ls <ul><li>显示目录中的文件信息</li></ul></li><li>tree <ul><li>树状图的形式列出目录内容及结构</li></ul></li><li><strong>find</strong><ul><li>指定条件来查找文件所对应的位置，语法格式为“find [查找范围] 寻找条件”</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-name</td><td>匹配名称</td></tr><tr><td>-perm</td><td>匹配权限（mode为完全匹配，-mode为包含即可）</td></tr><tr><td>-user</td><td>匹配所有者</td></tr><tr><td>-group</td><td>匹配所有组</td></tr><tr><td>-mtime -n +n</td><td>匹配修改内容的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-atime -n +n</td><td>匹配访问文件的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-ctime -n +n</td><td>匹配修改文件权限的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-nouser</td><td>匹配无所有者的文件</td></tr><tr><td>-nogroup</td><td>匹配无所有组的文件</td></tr><tr><td>-newer f1 !f2</td><td>匹配比文件f1新但比f2旧的文件</td></tr><tr><td>-type b/d/c/p/l/f</td><td>匹配文件类型（后面的字幕字母依次表示块设备、目录、字符设备、管道、链接文件、文本文件）</td></tr><tr><td>-size</td><td>匹配文件的大小（+50KB为查找超过50KB的文件，而-50KB为查找小于50KB的文件）</td></tr><tr><td>-prune</td><td>忽略某个目录</td></tr><tr><td>-exec …… {};</td><td>后面可跟用于进一步处理搜索结果的命令（下文会有演</td></tr></tbody></table><ul><li>locate <ul><li>按照名称快速搜索文件所对应的位置，语法格式为“locate文件名称”</li><li>updatedb 配合 locate使用</li></ul></li><li>whereis <ul><li>按照名称快速搜索二进制程序（命令）、源代码以及帮助文件所对应的位置，语法格式为“whereis命令名称”</li><li>where ls / pwd</li></ul></li><li>which <ul><li>指定名称快速搜索二进制程序（命令）所对应的位置，语法格式为“which命令名称”</li><li>which命令是在PATH变量所指定的路径中，按照指定条件搜索命令所在的路径。也就是说，如果我们既不关心同名文件（find与locate），也不关心命令所对应的源代码和帮助文件（whereis），仅仅是想找到命令本身所在的路径，那么这个which命令就太合适了</li></ul></li></ul><h2 id="文本文件编辑命令" tabindex="-1">文本文件编辑命令 <a class="header-anchor" href="#文本文件编辑命令" aria-label="Permalink to &quot;文本文件编辑命令&quot;">​</a></h2><ul><li>cat <ul><li>查看纯文本文件（内容较少）</li><li>-n</li></ul></li><li>more <ul><li>查看纯文本文件（内容较多）</li></ul></li><li>head <ul><li>查看纯文本文件的前<em>N</em>行，语法格式为“head [参数] 文件名称”</li></ul></li><li>tail <ul><li>查看纯文本文件的后<em>N</em>行或持续刷新文件的最新内容，语法格式为“tail [参数] 文件名称”</li><li>-f 持续</li><li>-n 行数</li></ul></li><li>tr <ul><li>替换文本内容中的字符 语法格式为“tr [原始字符] [目标字符]”</li><li>cat readme.txt | tr [a-z] [A-Z]</li></ul></li><li>wc <ul><li>统计指定文本文件的行数、字数或字节数,语法格式为“wc [参数] 文件名称”</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>只显示行数</td></tr><tr><td>-w</td><td>只显示单词数</td></tr><tr><td>-c</td><td>只显示字节数</td></tr></tbody></table><ul><li>stat</li><li>stat <ul><li>查看文件的具体存储细节和时间等信息</li></ul></li><li><strong>grep</strong><ul><li>用于按行提取文本内容，语法格式为“grep [参数] 文件名称</li><li>ps -ef | grep xxx(redis/nginx)</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-b</td><td>将可执行文件(binary)当作文本文件（text）来搜索</td></tr><tr><td>-c</td><td>仅显示找到的行数</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-n</td><td>显示行号</td></tr><tr><td>-v</td><td>反向选择——仅列出没有“关键词”的行。</td></tr></tbody></table><ul><li><p>cut</p><ul><li><p>用于按“列”提取文本内容，语法格式为“cut [参数] 文件名称”</p></li><li><p>使用-f参数设置需要查看的列数，还需要使用-d参数来设置间隔符号</p></li><li><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>cut -d : -f 1 /etc/passwd</span></span></code></pre></div></li></ul></li><li><p>diff</p><ul><li>比较多个文件之间内容的差异</li><li>使用--brief参数来确认两个文件是否相同，</li><li>还可以使用-c参数来详细比较出多个文件的差异之处</li></ul></li><li><p><strong>uniq</strong></p><ul><li>去除文本中连续的重复行，语法格式为“uniq [参数] 文件名称”</li></ul></li><li><p><strong>sort</strong></p><ul><li>对文本内容进行再排序</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>忽略大小写</td></tr><tr><td>-b</td><td>忽略缩进与空格</td></tr><tr><td>-n</td><td>以数值型排序</td></tr><tr><td>-r</td><td>反向排序</td></tr><tr><td>-u</td><td>去除重复行</td></tr><tr><td>-t</td><td>指定间隔符</td></tr><tr><td>-k</td><td>设置字段范围</td></tr></tbody></table><h2 id="文件目录管理命令" tabindex="-1">文件目录管理命令 <a class="header-anchor" href="#文件目录管理命令" aria-label="Permalink to &quot;文件目录管理命令&quot;">​</a></h2><ul><li>touch <ul><li>创建空白文件或设置文件的时间</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>仅修改“读取时间”（atime）</td></tr><tr><td>-m</td><td>仅修改“修改时间”（mtime）</td></tr><tr><td>-d</td><td>同时修改atime与mtime</td></tr></tbody></table><ul><li><strong>mkdir</strong><ul><li>创建空白的目录</li><li>-p</li></ul></li><li>cp <ul><li>复制文件或目录</li></ul></li></ul><blockquote><p>如果目标文件是目录，则会把源文件复制到该目录中；</p><p>如果目标文件也是普通文件，则会询问是否要覆盖它；</p><p>如果目标文件不存在，则执行正常的复制操作。</p></blockquote><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-p</td><td>保留原始文件的属性</td></tr><tr><td>-d</td><td>若对象为“链接文件”，则保留该“链接文件”的属性</td></tr><tr><td>-r</td><td>递归持续复制（用于目录）</td></tr><tr><td>-i</td><td>若目标文件存在则询问是否覆盖</td></tr><tr><td>-a</td><td>相当于-pdr（p、d、r为上述参数）</td></tr></tbody></table><ul><li>mv <ul><li>剪切或重命名文件</li></ul></li><li>rm <ul><li>-f</li><li>-r</li></ul></li><li>dd <ul><li>按照指定大小和个数的数据块来复制文件或转换文件，语法格式为“dd if=参数值of=参数值count=参数值bs=参数值”。</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>if</td><td>输入的文件名称</td></tr><tr><td>of</td><td>输出的文件名称</td></tr><tr><td>bs</td><td>设置每个“块”的大小</td></tr><tr><td>count</td><td>设置要复制“块”的个数</td></tr></tbody></table><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>dd if=/dev/cdrom of=RHEL-server-8.0-x86_64-LinuxProbe.Com.iso</span></span>
<span class="line"><span> dd if=/dev/zero of=560_file count=1 bs=560M</span></span></code></pre></div><ul><li><p>file</p><ul><li>查看文件的类型</li></ul></li><li><p>tar</p><ul><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 解压到指定目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xzvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> etc.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root/etc</span></span></code></pre></div></li><li><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> czvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> etc.tar.gz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc</span></span></code></pre></div></li></ul></li></ul><h2 id="输入输出重定向" tabindex="-1">输入输出重定向 <a class="header-anchor" href="#输入输出重定向" aria-label="Permalink to &quot;输入输出重定向&quot;">​</a></h2><ul><li>输入重定向是指把文件导入到命令中</li><li>输出重定向则是指把原本要输出到屏幕的数据信息写入到指定文件中</li></ul><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>命令 &lt; 文件</td><td>将文件作为命令的标准输入</td></tr><tr><td>命令 &lt;&lt; 分界符</td><td>从标准输入中读入，直到遇见分界符才停止</td></tr><tr><td>命令 &lt; 文件1 &gt; 文件2</td><td>将文件1作为命令的标准输入并将标准输出到文件2</td></tr></tbody></table><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>命令 &gt; 文件</td><td>将标准输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令 2&gt; 文件</td><td>将错误输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令 &gt;&gt; 文件</td><td>将标准输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令 2&gt;&gt; 文件</td><td>将错误输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令 &gt;&gt; 文件 2&gt;&amp;1 或 命令 &amp;&gt;&gt; 文件</td><td>将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）</td></tr></tbody></table><h2 id="管道" tabindex="-1">管道 <a class="header-anchor" href="#管道" aria-label="Permalink to &quot;管道&quot;">​</a></h2><p><strong>把前一个命令原本要输出到屏幕的信息当作后一个命令的标准输入</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>grep /sbin/nologin /etc/passwd | wc -l</span></span>
<span class="line"><span>echo &quot;linuxprobe&quot; | passwd --stdin root</span></span>
<span class="line"><span>ps aux | grep bash</span></span></code></pre></div><h2 id="通配符" tabindex="-1">通配符 <a class="header-anchor" href="#通配符" aria-label="Permalink to &quot;通配符&quot;">​</a></h2><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>任意字符</td></tr><tr><td>?</td><td>单个任意字符</td></tr><tr><td>[a-z]</td><td>单个小写字母</td></tr><tr><td>[A-Z]</td><td>单个大写字母</td></tr><tr><td>[a-Z]</td><td>单个字母</td></tr><tr><td>[0-9]</td><td>单个数字</td></tr><tr><td>[[:alpha:]]</td><td>任意字母</td></tr><tr><td>[[:upper:]]</td><td>任意大写字母</td></tr><tr><td>[[:lower:]]</td><td>任意小写字母</td></tr><tr><td>[[:digit:]]</td><td>所有数字</td></tr><tr><td>[[:alnum:]]</td><td>任意字母加数字</td></tr><tr><td>[[:punct:]]</td><td>标点符号</td></tr></tbody></table><h2 id="转义字符" tabindex="-1">转义字符 <a class="header-anchor" href="#转义字符" aria-label="Permalink to &quot;转义字符&quot;">​</a></h2><p><strong>反斜杠（\\）</strong>：使反斜杠后面的一个变量变为单纯的字符。</p><p><strong>单引号（&#39; &#39;）</strong>：转义其中所有的变量为单纯的字符串。</p><p><strong>双引号（&quot; &quot;）</strong>：保留其中的变量属性，不进行转义处理。</p><p><strong>反引号（\` \`）</strong>：把其中的命令执行后返回结果。</p><h2 id="环境变量" tabindex="-1">环境变量 <a class="header-anchor" href="#环境变量" aria-label="Permalink to &quot;环境变量&quot;">​</a></h2><table><thead><tr><th>变量名称</th><th>作用</th></tr></thead><tbody><tr><td>HOME</td><td>用户的主目录（即家目录）</td></tr><tr><td>SHELL</td><td>用户在使用的Shell解释器名称</td></tr><tr><td>HISTSIZE</td><td>输出的历史命令记录条数</td></tr><tr><td>HISTFILESIZE</td><td>保存的历史命令记录条数</td></tr><tr><td>MAIL</td><td>邮件保存路径</td></tr><tr><td>LANG</td><td>系统语言、语系名称</td></tr><tr><td>RANDOM</td><td>生成一个随机数字</td></tr><tr><td>PS1</td><td>Bash解释器的提示符</td></tr><tr><td>PATH</td><td>定义解释器搜索用户执行命令的路径</td></tr><tr><td>EDITOR</td><td>用户默认的文本编辑器</td></tr></tbody></table><h2 id="用户相关" tabindex="-1">用户相关 <a class="header-anchor" href="#用户相关" aria-label="Permalink to &quot;用户相关&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><blockquote><p><strong>管理员UID为0</strong>：系统的管理员用户。</p><p><strong>系统用户UID为1～999</strong>：Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会由独立的系统用户负责运行，进而有效控制被破坏范围。</p><p><strong>普通用户UID从1000开始</strong>：是由管理员创建的用于日常工作的用户。</p></blockquote></div><ul><li>id <ul><li>显示用户的详细信息,用户ID、基本组与扩展组GID</li></ul></li><li>useradd <ul><li>创建新的用户账户</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定用户的家目录（默认为/home/username）</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD.</td></tr><tr><td>-u</td><td>指定该用户的默认UID</td></tr><tr><td>-g</td><td>指定一个初始的用户基本组（必须已存在）</td></tr><tr><td>-G</td><td>指定一个或多个扩展用户组</td></tr><tr><td>-N</td><td>不创建与用户同名的基本用户组</td></tr><tr><td>-s</td><td>指定该用户的默认Shell解释器</td></tr></tbody></table><ul><li>groupadd <ul><li>创建新的用户组</li></ul></li><li>usermod <ul><li>用于修改用户的属性</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>填写用户账户的备注信息</td></tr><tr><td>-d -m</td><td>参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD</td></tr><tr><td>-g</td><td>变更所属用户组</td></tr><tr><td>-G</td><td>变更扩展用户组</td></tr><tr><td>-L</td><td>锁定用户禁止其登录系统</td></tr><tr><td>-U</td><td>解锁用户，允许其登录系统</td></tr><tr><td>-s</td><td>变更默认终端</td></tr><tr><td>-u</td><td>修改用户的UID</td></tr></tbody></table><ul><li><strong>passwd</strong><ul><li>修改用户的密码、过期时间</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户，禁止其登录</td></tr><tr><td>-u</td><td>解除锁定，允许用户登录</td></tr><tr><td>--stdin</td><td>允许通过标准输入修改用户密码，如echo &quot;NewPassWord&quot; | passwd --stdin Username</td></tr><tr><td>-d</td><td>使该用户可用空密码登录系统</td></tr><tr><td>-e</td><td>强制用户在下次登录时修改密码</td></tr><tr><td>-S</td><td>显示用户的密码是否被锁定，以及密码所采用的加密算法名称</td></tr></tbody></table><ul><li><strong>userdel</strong><ul><li>删除已有的用户账户</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>强制删除用户</td></tr><tr><td>-r</td><td>同时删除用户及用户家目录</td></tr></tbody></table><h2 id="文件权限和归属" tabindex="-1">文件权限和归属 <a class="header-anchor" href="#文件权限和归属" aria-label="Permalink to &quot;文件权限和归属&quot;">​</a></h2><p><img src="https://www.linuxprobe.com/wp-content/uploads/2020/05/%E8%AF%BB%E5%86%99%E6%89%A7%E8%A1%8C%E6%9D%83%E9%99%90%E5%AF%B9%E4%BA%8E%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%9A%84%E4%BD%9C%E7%94%A8-1536x252.png" alt="读写执行权限对于文件与目录可执行命令的区别"></p><p><img src="https://www.linuxprobe.com/wp-content/uploads/2020/05/%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%8E%E6%95%B0%E5%AD%97%E8%A1%A8%E7%A4%BA-1536x302.png" alt="文件权限的字符与数字表示"></p><p>常见的文件类型包括</p><ul><li>普通文件（-）</li><li>目录文件（d）</li><li>链接文件（l）</li><li>管道文件（p）</li><li>块设备文件（b）</li><li>字符设备文件（c）</li></ul><h2 id="文件的特殊权限" tabindex="-1">文件的特殊权限 <a class="header-anchor" href="#文件的特殊权限" aria-label="Permalink to &quot;文件的特殊权限&quot;">​</a></h2><ul><li><strong>SUID</strong><ul><li>SUID是一种对二进制程序进行设置的特殊权限，能够让二进制程序的执行者临时拥有所有者的权限（仅对拥有执行权限的二进制程序有效）</li></ul></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# ls -l /etc/shadow</span></span>
<span class="line"><span>----------. 1 root root 1312 Jul 21 05:08 /etc/shadow</span></span>
<span class="line"><span>[root@linuxprobe ~]# ls -l /bin/passwd </span></span>
<span class="line"><span>-rwsr-xr-x. 1 root root 34512 Aug 13 2018 /bin/passwd</span></span></code></pre></div><ul><li><strong>SGID</strong><ul><li>当对二进制程序进行设置时，能够让执行者临时获取文件所属组的权限；</li><li>当对目录进行设置时，则是让目录内新创建的文件自动继承该目录原有用户组的名称。</li></ul></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>ot@linuxprobe tmp]# mkdir testdir</span></span>
<span class="line"><span>[root@linuxprobe tmp]# ls -ald testdir</span></span>
<span class="line"><span>drwxr-xr-x. 2 root root 6 Oct 27 23:44 testdir</span></span>
<span class="line"><span>[root@linuxprobe tmp]# chmod -R 777 testdir</span></span>
<span class="line"><span>[root@linuxprobe tmp]# chmod -R g+s testdir</span></span>
<span class="line"><span>[root@linuxprobe tmp]# ls -ald testdir</span></span>
<span class="line"><span>drwxrwsrwx. 2 root root 6 Oct 27 23:44 testdir</span></span></code></pre></div><ul><li>chmod <ul><li>设置文件的一般权限及特殊权限</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>u+s</td><td>设置SUID权限</td></tr><tr><td>u-s</td><td>取消SUID权限</td></tr><tr><td>g+s</td><td>设置SGID权限</td></tr><tr><td>g-s</td><td>取消SGID权限</td></tr><tr><td>o+t</td><td>设置SBIT权限</td></tr><tr><td>o-t</td><td>取消SBIT权限</td></tr></tbody></table><ul><li><p>chown</p><ul><li><p>设置文件的所有者和所有组,chown 所有者:所有组 文件名</p></li><li><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>chown linuxprobe:linuxprobe anaconda-ks.cfg</span></span></code></pre></div></li></ul></li><li><p>SBIT</p><ul><li><p>某个目录设置了SBIT粘滞位权限后，那么该目录中的文件就只能被其所有者执行删除操作了。</p></li><li><p>/tmp默认有SBIT权限</p></li><li><p>文件的其他用户权限部分的x执行权限就会被替换成t或者T—原本有x执行权限则会写成t，原本没有x执行权限则会被写成T。</p></li><li><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# ls -ald /tmp</span></span>
<span class="line"><span>drwxrwxrwt. 17 root root 4096 Oct 28 00:29 /tmp</span></span></code></pre></div></li></ul></li></ul><h2 id="文件的隐藏权限" tabindex="-1">文件的隐藏权限 <a class="header-anchor" href="#文件的隐藏权限" aria-label="Permalink to &quot;文件的隐藏权限&quot;">​</a></h2><ul><li><strong>chattr</strong><ul><li>设置文件的隐藏权限</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>i</td><td>无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件</td></tr><tr><td>a</td><td>仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）</td></tr><tr><td>S</td><td>文件内容在变更后立即同步到硬盘（sync）</td></tr><tr><td>s</td><td>彻底从硬盘中删除，不可恢复（用0填充原文件所在硬盘区域）</td></tr><tr><td>A</td><td>不再修改这个文件或目录的最后访问时间（atime）</td></tr><tr><td>b</td><td>不再修改文件或目录的存取时间</td></tr><tr><td>D</td><td>检查压缩文件中的错误</td></tr><tr><td>d</td><td>使用dump命令备份时忽略本文件/目录</td></tr><tr><td>c</td><td>默认将文件或目录进行压缩</td></tr><tr><td>u</td><td>当删除该文件后依然保留其在硬盘中的数据，方便日后恢复</td></tr><tr><td>t</td><td>让文件系统支持尾部合并（tail-merging）</td></tr><tr><td>x</td><td>可以直接访问压缩文件中的内容</td></tr></tbody></table><ul><li><strong>lsattr</strong><ul><li>查看文件的隐藏权限</li></ul></li></ul><h2 id="文件访问控制列表" tabindex="-1">文件访问控制列表 <a class="header-anchor" href="#文件访问控制列表" aria-label="Permalink to &quot;文件访问控制列表&quot;">​</a></h2><p>一般权限、特殊权限、隐藏权限其实有一个共性—权限是针对某一类用户设置的，能够对很多人同时生效。如果希望对某个指定的用户进行单独的权限控制，就需要用到文件的访问控制列表（ACL）了。通俗来讲，基于普通文件或目录设置ACL其实就是针对指定的用户或用户组设置文件或目录的操作权限，更加精准地派发权限。另外，如果针对某个目录设置了ACL，则目录中的文件会继承其ACL权限；若针对文件设置了ACL，则文件不再继承其所在目录的ACL权限</p><ul><li><p><strong>setfacl</strong></p><ul><li><p>管理文件的ACL权限规则</p></li><li><p><strong>针对单一用户或用户组、单一文件或目录来进行读/写/执行权限的控制</strong></p></li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-m</td><td>修改权限</td></tr><tr><td>-M</td><td>从文件中读取权限</td></tr><tr><td>-x</td><td>删除某个权限</td></tr><tr><td>-b</td><td>删除全部权限</td></tr><tr><td>-R</td><td>递归子目录</td></tr></tbody></table><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@linuxprobe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# setfacl -Rm u:linuxprobe:rwx /root</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#文件权限的最后一个点（.）变成了加号（+），这就意味着该文件已经设置了ACL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@linuxprobe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# ls -ld /root</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dr-xrwx---+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> May</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2020</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /root</span></span></code></pre></div><ul><li><strong>getfacl</strong><ul><li>查看文件的ACL权限规则</li></ul></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe /]# setfacl --restore backup.acl</span></span></code></pre></div><h2 id="su命令和sudo-服务" tabindex="-1">su命令和sudo 服务 <a class="header-anchor" href="#su命令和sudo-服务" aria-label="Permalink to &quot;su命令和sudo 服务&quot;">​</a></h2><ul><li>su命令 <ul><li>可以解决切换用户身份的需求，使得当前用户在不退出登录的情况下，顺畅地切换到其他用户</li></ul></li><li>sudo命令 <ul><li>用于给普通用户提供额外的权限，语法格式为“sudo [参数] 用户名”。</li></ul></li></ul><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-h</td><td>列出帮助信息</td></tr><tr><td>-l</td><td>列出当前用户可执行的命令</td></tr><tr><td>-u 用户名或UID值</td><td>以指定的用户身份执行命令</td></tr><tr><td>-k</td><td>清空密码的有效时间，下次执行sudo时需要再次进行密码验证</td></tr><tr><td>-b</td><td>在后台执行指定的命令</td></tr><tr><td>-p</td><td>更改询问密码的提示语</td></tr></tbody></table><p>使用sudo命令提供的visudo命令来配置用户权限</p><p>按照下面的格式在第101行（大约）填写上指定的信息。</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><strong>谁可以使用 允许使用的主机 = （以谁的身份） 可执行命令的列表</strong></p><p>**谁可以使用：**稍后要为哪位用户进行命令授权。</p><p>**允许使用的主机：**可以填写ALL表示不限制来源的主机，亦可填写如192.168.10.0/24这样的网段限制来源地址，使得只有从允许网段登录时才能使用sudo命令。</p><p>**以谁的身份：**可以填写ALL表示系统最高权限，也可以是另外一位用户的名字。</p><p>**可执行命令的列表：**可以填写ALL表示不限制命令，亦可填写如/usr/bin/cat这样的文件名称来限制命令列表，多个命令文件之间用逗号（,）间隔。</p></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# visudo</span></span>
<span class="line"><span> 99 ## Allow root to run any commands anywhere</span></span>
<span class="line"><span>100 root ALL=(ALL) ALL</span></span>
<span class="line"><span>101 linuxprobe ALL=(ALL) ALL</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@linuxprobe </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# visudo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 99</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> ## Allow root to run any commands anywhere</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">100</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALL=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ALL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">101</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linuxprobe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALL=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/bin/cat,/usr/sbin/reboot</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">101</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linuxprobe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ALL=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ALL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">NOPASSWD:/usr/bin/cat,/usr/sbin/reboot</span></span></code></pre></div><h2 id="vim文本编辑器" tabindex="-1">Vim文本编辑器 <a class="header-anchor" href="#vim文本编辑器" aria-label="Permalink to &quot;Vim文本编辑器&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><strong>命令模式</strong>：控制光标移动，可对文本进行复制、粘贴、删除和查找</p><p><strong>输入模式</strong>：文本录入</p><p><strong>末行模式</strong>：保存或退出文档，以及设置编辑环境</p></div><ul><li><p>命令模式命令</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>dd</td><td>删除（剪切）光标所在的行</td></tr><tr><td>5dd</td><td>删除（剪切）光标处开始的行</td></tr><tr><td>yy</td><td>复制光标所在整行</td></tr><tr><td>5dd</td><td>复制从光标处开始的5行</td></tr><tr><td>n</td><td>显示搜索命令定位到的下一个字符串</td></tr><tr><td>N</td><td>显示搜索命令定位到的上一个字符串</td></tr><tr><td>u</td><td>撤销上一步的操作</td></tr><tr><td>p</td><td>将之前删除（dd）或复制（yy）过的数据粘贴到光标后面</td></tr></tbody></table></li><li><p>末行模式（命令行输入一个冒号）命令</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>:w</td><td>保存</td></tr><tr><td>:q</td><td>退出</td></tr><tr><td>:q!</td><td>强制退出（放弃对文档的修改内容）</td></tr><tr><td>:wq!</td><td>强制保存退出</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>不显示行号</td></tr><tr><td>:命令</td><td>执行该命令</td></tr><tr><td>:整数</td><td>跳转到该行</td></tr><tr><td>:s/one/two</td><td>将当前光标所在行的第一个one替换成two</td></tr><tr><td>:s/one/two/g</td><td>将当前光标所在行的所有one替换成two</td></tr><tr><td>:%s/one/two/g</td><td>将全文中的所有one替换成two</td></tr><tr><td>?字符串</td><td>在文本中从下至上搜索该字符串</td></tr><tr><td>/字符串</td><td>在文本中从上至下搜索该字符串-</td></tr></tbody></table></li></ul><h2 id="防火墙-iptables-和-firewalld" tabindex="-1">防火墙（iptables 和 firewalld） <a class="header-anchor" href="#防火墙-iptables-和-firewalld" aria-label="Permalink to &quot;防火墙（iptables 和 firewalld）&quot;">​</a></h2><ul><li>防火墙按照从上至下顺序读取配置信息，找到匹配就去<code>放行</code> 和<code>阻止</code></li><li>如果在读取完所有的策略规则之后没有匹配项，就去执行默认的策略</li></ul><h3 id="iptables" tabindex="-1">iptables <a class="header-anchor" href="#iptables" aria-label="Permalink to &quot;iptables&quot;">​</a></h3><p><code>iptables</code>服务把用于处理或过滤流量的策略条目称之为规则，多条规则可以组成一个规则链，而规则链则依据数据包处理位置的不同进行分类，具体如下：</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>在进行路由选择前处理数据包（<code>PREROUTING</code>）；</p><p>处理流入的数据包（<code>INPUT</code>）；</p><p>处理流出的数据包（<code>OUTPUT</code>）；</p><p>处理转发的数据包（<code>FORWARD</code>）；</p><p>在进行路由选择后处理数据包（<code>POSTROUTING</code>）。</p></div><p><code>iptables</code>服务的术语中分别是</p><ul><li>ACCEPT（允许流量通过）</li><li>REJECT（拒绝流量通过,拒绝流量后再回复一条“信息已经收到，但是被扔掉了）</li><li>LOG（记录日志信息）</li><li>DROP（拒绝流量通过,直接将流量丢弃而且不响应）</li></ul><p><code> iptables</code>中常用的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-P</td><td>设置默认策略</td></tr><tr><td>-F</td><td>清空规则链</td></tr><tr><td>-L</td><td>查看规则链</td></tr><tr><td>-A</td><td>在规则链的末尾加入新规则</td></tr><tr><td>-I num</td><td>在规则链的头部加入新规则</td></tr><tr><td>-D num</td><td>删除某一条规则</td></tr><tr><td>-s</td><td>匹配来源地址IP/MASK，加叹号“!”表示除这个IP外</td></tr><tr><td>-d</td><td>匹配目标地址</td></tr><tr><td>-i 网卡名称</td><td>匹配从这块网卡流入的数据</td></tr><tr><td>-o 网卡名称</td><td>匹配从这块网卡流出的数据</td></tr><tr><td>-p</td><td>匹配协议，如TCP、UDP、ICMP</td></tr><tr><td>--dport num</td><td>匹配目标端口号</td></tr><tr><td>--sport num</td><td>匹配来源端口号</td></tr></tbody></table><h3 id="命令" tabindex="-1">命令 <a class="header-anchor" href="#命令" aria-label="Permalink to &quot;命令&quot;">​</a></h3><ol><li><strong>查看防火墙规则链</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span></span></code></pre></div><ol start="2"><li><strong>清除防火墙规则链</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span></span></code></pre></div><ol start="3"><li><strong>把INPUT规则链的默认策略设置为拒绝</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># INPUT链设置为默认拒绝后，就要往里面写入允许策略,否则流入所有数据包默认被拒绝</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DROP</span></span></code></pre></div><ol start="4"><li><strong>向INPUT链中添加允许ICMP流量进入的策略规则</strong></li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加允许ping</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> icmp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> www.baidu.com</span></span></code></pre></div><ol start="5"><li><strong>删除INPUT规则链中刚刚加入的那条策略（允许ICMP流量），并把默认策略设置为允许</strong></li></ol><p>使用-F参数会清空已有的所有防火墙策略；使用-D参数可以删除某一条指定的策略，因此更加安全和准确</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span></code></pre></div><ol start="6"><li><strong>将INPUT规则链设置为只允许指定网段的主机访问本机的22端口，拒绝来自其他所有主机的流量。</strong></li></ol><p>要对某台主机进行匹配，可直接写出它的IP地址；如需对网段进行匹配，则需要写为子网掩码的形式（比如192.168.10.0/24）。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iptables -I INPUT -s 192.168.10.0/24 -p tcp --dport 22 -j ACCEPT</span></span>
<span class="line"><span>iptables -A INPUT -p tcp --dport 22 -j REJECT</span></span>
<span class="line"><span>iptables -L</span></span></code></pre></div><p>再次重申，防火墙策略规则是按照从上到下的顺序匹配的，因此一定要把允许动作放到拒绝动作前面，否则所有的流量就将被拒绝掉，从而导致任何主机都无法访问我们的服务。</p><p>在设置完上述INPUT规则链之后，使用IP地址在192.168.10.0/24网段内的主机访问服务器（即前面提到的设置了INPUT规则链的主机）的22端口，效果如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@Client A ~]# ssh 192.168.10.10</span></span>
<span class="line"><span>The authenticity of host &#39;192.168.10.10 (192.168.10.10)&#39; can&#39;t be established.</span></span>
<span class="line"><span>ECDSA key fingerprint is SHA256:5d52kZi1la/FJK4v4jibLBZhLqzGqbJAskZiME6ZXpQ.</span></span>
<span class="line"><span>Are you sure you want to continue connecting (yes/no)? yes</span></span>
<span class="line"><span>Warning: Permanently added &#39;192.168.10.10&#39; (ECDSA) to the list of known hosts.</span></span>
<span class="line"><span>root@192.168.10.10&#39;s password: 此处输入服务器密码</span></span>
<span class="line"><span>Activate the web console with: systemctl enable --now cockpit.socket</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Last login: Wed Jan 20 16:30:28 2021 from 192.168.10.1</span></span></code></pre></div><p>然后，再使用IP地址在192.168.20.0/24网段内的主机访问服务器的22端口（虽网段不同，但已确认可以相互通信），效果如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@Client B ~]# ssh 192.168.10.10</span></span>
<span class="line"><span>Connecting to 192.168.10.10:22...</span></span>
<span class="line"><span>Could not connect to &#39;192.168.10.10&#39; (port 22): Connection failed.</span></span></code></pre></div><p>由上可以看到，提示连接请求被拒绝了（Connection failed）。</p><ol start="7"><li><strong>向INPUT规则链中添加拒绝所有人访问本机12345端口的策略规则。</strong></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iptables -I INPUT -p tcp --dport 12345 -j REJECT</span></span>
<span class="line"><span>iptables -I INPUT -p udp --dport 12345 -j REJECT</span></span>
<span class="line"><span>iptables -L</span></span></code></pre></div><ol start="8"><li><strong>向INPUT规则链中添加拒绝192.168.10.5主机访问本机80端口（Web服务）的策略规则。</strong></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iptables -I INPUT -p tcp -s 192.168.10.5 --dport 80 -j REJECT</span></span>
<span class="line"><span>iptables -L</span></span></code></pre></div><ol start="8"><li><strong>向INPUT规则链中添加拒绝所有主机访问本机1000～1024端口的策略规则。</strong></li></ol><p>前面在添加防火墙策略时，使用的是-I参数，它默认会把规则添加到最上面的位置，因此优先级是最高的。如果工作中需要添加一条最后“兜底”的规则，那就用-A参数吧。这两个参数的效果差别还是很大的：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iptables -A INPUT -p tcp --dport 1000:1024 -j REJECT</span></span>
<span class="line"><span>iptables -A INPUT -p udp --dport 1000:1024 -j REJECT</span></span>
<span class="line"><span>iptables -L</span></span></code></pre></div><p>但是请特别注意，使用iptables命令配置的防火墙规则默认会在系统下一次重启时失效，如果想让配置的防火墙策略永久生效，还要执行保存命令：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>iptables-save</span></span></code></pre></div><p>对了，如果公司服务器是5/6/7版本的话，对应的保存命令应该是：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>service iptables save</span></span></code></pre></div><h3 id="firewalld" tabindex="-1">firewalld <a class="header-anchor" href="#firewalld" aria-label="Permalink to &quot;firewalld&quot;">​</a></h3><p>firewalld支持动态更新技术并加入了区域（zone）的概念。区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。</p><table><thead><tr><th>区域</th><th>默认规则策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有的数据包</td></tr><tr><td>home</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量</td></tr><tr><td>internal</td><td>等同于home区域</td></tr><tr><td>work</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量</td></tr><tr><td>public</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量</td></tr><tr><td>external</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td></tr><tr><td>dmz</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td></tr><tr><td>block</td><td>拒绝流入的流量，除非与流出的流量相关</td></tr><tr><td>drop</td><td>拒绝流入的流量，除非与流出的流量相关</td></tr></tbody></table><p>firewall-cmd命令中使用的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>--get-default-zone</td><td>查询默认的区域名称</td></tr><tr><td>--set-default-zone=&lt;区域名称&gt;</td><td>设置默认的区域，使其永久生效</td></tr><tr><td>--get-zones</td><td>显示可用的区域</td></tr><tr><td>--get-services</td><td>显示预先定义的服务</td></tr><tr><td>--get-active-zones</td><td>显示当前正在使用的区域与网卡名称</td></tr><tr><td>--add-source=</td><td>将源自此IP或子网的流量导向指定的区域</td></tr><tr><td>--remove-source=</td><td>不再将源自此IP或子网的流量导向某个指定区域</td></tr><tr><td>--add-interface=&lt;网卡名称&gt;</td><td>将源自该网卡的所有流量都导向某个指定区域</td></tr><tr><td>--change-interface=&lt;网卡名称&gt;</td><td>将某个网卡与区域进行关联</td></tr><tr><td>--list-all</td><td>显示当前区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>--list-all-zones</td><td>显示所有区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>--add-service=&lt;服务名&gt;</td><td>设置默认区域允许该服务的流量</td></tr><tr><td>--add-port=&lt;端口号/协议&gt;</td><td>设置默认区域允许该端口的流量</td></tr><tr><td>--remove-service=&lt;服务名&gt;</td><td>设置默认区域不再允许该服务的流量</td></tr><tr><td>--remove-port=&lt;端口号/协议&gt;</td><td>设置默认区域不再允许该端口的流量</td></tr><tr><td>--reload</td><td>让“永久生效”的配置规则立即生效，并覆盖当前的配置规则</td></tr><tr><td>--panic-on</td><td>开启应急状况模式</td></tr><tr><td>--panic-off</td><td>关闭应急状况模式</td></tr></tbody></table><blockquote><p>与Linux系统中其他的防火墙策略配置工具一样，使用firewalld配置的防火墙策略默认为运行时（Runtime）模式，又称为当前生效模式，而且会随着系统的重启而失效。如果想让配置策略一直存在，就需要使用永久（Permanent）模式了，方法就是在用firewall-cmd命令正常设置防火墙策略时添加--permanent参数，这样配置的防火墙策略就可以永久生效了。但是，永久生效模式有一个“不近人情”的特点，就是使用它设置的策略只有在系统重启之后才能自动生效。如果想让配置的策略立即生效，需要手动执行firewall-cmd --reload命令。</p></blockquote><p>Runtime：当前立即生效，重启后失效。</p><p>Permanent：当前不生效，重启后生效。</p><p><strong>1．查看firewalld服务当前所使用的区域。</strong></p><p>在配置防火墙策略前，必须查看当前生效的是哪个区域，否则配置的防火墙策略将不会立即生效。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --get-default-zone</span></span>
<span class="line"><span>public</span></span></code></pre></div><p><strong>2．查询指定网卡在firewalld服务中绑定的区域。</strong></p><p>可以根据网卡针对的流量来源，为网卡绑定不同的区域，实现对防火墙策略的灵活管控。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --get-zone-of-interface=ens160</span></span>
<span class="line"><span>public</span></span></code></pre></div><p><strong>3．把网卡默认区域修改为external，并在系统重启后生效。</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --zone=external --change-interface=ens160</span></span>
<span class="line"><span>The interface is under control of NetworkManager, setting zone to &#39;external&#39;.</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --get-zone-of-interface=ens160</span></span>
<span class="line"><span>external</span></span></code></pre></div><p><strong>4．把firewalld服务的默认区域设置为public。</strong></p><p>默认区域也叫全局配置，指的是对所有网卡都生效的配置，优先级较低</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --set-default-zone=public</span></span>
<span class="line"><span>Warning: ZONE_ALREADY_SET: public</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --get-default-zone </span></span>
<span class="line"><span>public</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --get-zone-of-interface=ens160</span></span>
<span class="line"><span>externa</span></span></code></pre></div><p><strong>5．启动和关闭firewalld防火墙服务的应急状况模式。</strong></p><p>使用--panic-on参数会立即切断一切网络连接，而使用--panic-off则会恢复网络连接。切记，紧急模式会切断一切网络连接，因此在远程管理服务器时，在按下回车键前一定要三思。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --panic-on</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --panic-off</span></span>
<span class="line"><span>success</span></span></code></pre></div><p><strong>6．查询SSH和HTTPS协议的流量是否允许放行。</strong></p><p>在工作中可以不使用--zone参数指定区域名称，firewall-cmd命令会自动依据默认区域进行查询，从而减少用户输入量。但是，如果默认区域与网卡所绑定的不一致时，就会发生冲突，因此规范写法的zone参数是一定要加的。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --query-service=ssh</span></span>
<span class="line"><span>yes</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --query-service=https</span></span>
<span class="line"><span>no</span></span></code></pre></div><p><strong>7．把HTTPS协议的流量设置为永久允许放行，并立即生效。</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --zone=public --add-service=https</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --query-service=https</span></span>
<span class="line"><span>no</span></span></code></pre></div><p>不想重启服务器的话，就用--reload参数吧：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --reload</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --query-service=https</span></span>
<span class="line"><span>yes</span></span></code></pre></div><p><strong>8．把HTTP协议的流量设置为永久拒绝，并立即生效。</strong></p><p>由于在默认情况下HTTP协议的流量就没有被允许，所以会有“Warning: NOT_ENABLED: http”这样的提示信息，因此对实际操作没有影响。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --zone=public --remove-service=http</span></span>
<span class="line"><span>Warning: NOT_ENABLED: http</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --reload </span></span>
<span class="line"><span>success</span></span></code></pre></div><p><strong>9．把访问8080和8081端口的流量策略设置为允许，但仅限当前生效。</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --add-port=8080-8081/tcp</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --zone=public --list-ports</span></span>
<span class="line"><span>8080-8081/tcp</span></span></code></pre></div><p><strong>10．把原本访问本机888端口的流量转发到22端口，要且求当前和长期均有效。</strong></p><p>通过这项技术，新的端口号在收到用户请求后会自动转发到原本服务的端口上，使得用户能够通过新的端口访问到原本的服务。</p><blockquote><p>firewall-cmd --permanent --zone=<strong>&lt;区域&gt;</strong> --add-forward-port=port=&lt;源端口号&gt;:proto=<strong>&lt;协议&gt;</strong>:toport=<strong>&lt;目标端口号&gt;</strong>:toaddr=<strong>&lt;目标IP地址&gt;</strong></p></blockquote><p>上述命令中的目标IP地址一般是服务器本机的IP地址：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --zone=public --add-forward-port=port=888:proto=tcp:toport=22:toaddr=192.168.10.10</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --reload</span></span>
<span class="line"><span>success</span></span></code></pre></div><p>在客户端使用ssh命令尝试访问192.168.10.10主机的888端口，访问成功：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@client A ~]# ssh -p 888 192.168.10.10</span></span>
<span class="line"><span>The authenticity of host &#39;[192.168.10.10]:888 ([192.168.10.10]:888)&#39; can&#39;t be established.</span></span>
<span class="line"><span>ECDSA key fingerprint is b8:25:88:89:5c:05:b6:dd:ef:76:63:ff:1a:54:02:1a.</span></span>
<span class="line"><span>Are you sure you want to continue connecting (yes/no)? yes</span></span>
<span class="line"><span>Warning: Permanently added &#39;[192.168.10.10]:888&#39; (ECDSA) to the list of known hosts.</span></span>
<span class="line"><span>root@192.168.10.10&#39;s password:此处输入远程root管理员的密码</span></span>
<span class="line"><span>Last login: Sun Jul 19 21:43:48 2021 from 192.168.10.10</span></span></code></pre></div><p>**11．**富规则的设置。</p><p>富规则也叫复规则，表示更细致、更详细的防火墙策略配置，它可以针对系统服务、端口号、源地址和目标地址等诸多信息进行更有针对性的策略配置。它的优先级在所有的防火墙策略中也是最高的。比如，我们可以在firewalld服务中配置一条富规则，使其拒绝192.168.10.0/24网段的所有用户访问本机的ssh服务（22端口）：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@linuxprobe ~]# firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.10.0/24&quot; service name=&quot;ssh&quot; reject&quot;</span></span>
<span class="line"><span>success</span></span>
<span class="line"><span>[root@linuxprobe ~]# firewall-cmd --reload</span></span>
<span class="line"><span>success</span></span></code></pre></div><p>在客户端使用ssh命令尝试访问192.168.10.10主机的ssh服务（22端口）：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>[root@client A ~]# ssh 192.168.10.10</span></span>
<span class="line"><span>Connecting to 192.168.10.10:22...</span></span>
<span class="line"><span>Could not connect to &#39;192.168.10.10&#39; (port 22): Connection failed.</span></span></code></pre></div>`,182),n=[d];function e(p,r,o,h,c,u){return a(),s("div",null,n)}const k=t(i,[["render",e]]);export{b as __pageData,k as default};
